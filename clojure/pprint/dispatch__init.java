package clojure.pprint;

import clojure.lang.*;

public class dispatch__init {
 public static void load() throws Exception {
  ((IFn)const__0.getRawRoot()).invoke(const__1);
  const__2.setMeta((IPersistentMap)const__12);
  const__2.bindRoot(new clojure.pprint_use_method());
  const__13.setMeta((IPersistentMap)const__15);
  const__13.bindRoot(const__20);
  const__21.setMeta((IPersistentMap)const__24);
  const__21.bindRoot(new clojure.pprint_pprint_reader_macro());
  const__25.setMeta((IPersistentMap)const__28);
  const__25.bindRoot(new clojure.pprint_pprint_simple_list());
  const__29.setMeta((IPersistentMap)const__32);
  const__29.bindRoot(new clojure.pprint_pprint_list());
  const__33.setMeta((IPersistentMap)const__36);
  const__33.bindRoot(new clojure.pprint_pprint_vector());
  const__37.setMeta((IPersistentMap)const__39);
  const__37.bindRoot(((IFn)new clojure.pprint_fn__8235()).invoke());
  const__40.setMeta((IPersistentMap)const__43);
  const__40.bindRoot(new clojure.pprint_pprint_map());
  const__44.setMeta((IPersistentMap)const__46);
  const__44.bindRoot(((IFn)new clojure.pprint_fn__8249()).invoke());
  const__47.setMeta((IPersistentMap)const__49);
  const__47.bindRoot(const__50);
  const__51.setMeta((IPersistentMap)const__54);
  const__51.bindRoot(new clojure.pprint_map_ref_type());
  const__55.setMeta((IPersistentMap)const__58);
  const__55.bindRoot(new clojure.pprint_pprint_ideref());
  const__59.setMeta((IPersistentMap)const__61);
  const__59.bindRoot(((IFn)new clojure.pprint_fn__8265()).invoke());
  const__62.setMeta((IPersistentMap)const__65);
  const__62.bindRoot(new clojure.pprint_pprint_simple_default());
  ((IFn)new clojure.pprint_fn__8274()).invoke();
  ((IFn)const__2.getRawRoot()).invoke(const__66.getRawRoot(), const__67, const__29.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__66.getRawRoot(), const__68, const__33.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__66.getRawRoot(), const__69, const__40.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__66.getRawRoot(), const__70, const__44.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__66.getRawRoot(), const__71, const__59.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__66.getRawRoot(), const__72, const__55.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__66.getRawRoot(), null, const__73.get());
  ((IFn)const__2.getRawRoot()).invoke(const__66.getRawRoot(), const__74, const__62.getRawRoot());
  const__75.setMeta((IPersistentMap)const__78);
  const__79.setMeta((IPersistentMap)const__82);
  const__79.bindRoot(new clojure.pprint_brackets());
  const__83.setMeta((IPersistentMap)const__86);
  const__83.bindRoot(new clojure.pprint_pprint_ns_reference());
  const__87.setMeta((IPersistentMap)const__90);
  const__87.bindRoot(new clojure.pprint_pprint_ns());
  const__91.setMeta((IPersistentMap)const__93);
  const__91.bindRoot(((IFn)new clojure.pprint_fn__8349()).invoke());
  const__94.setMeta((IPersistentMap)const__97);
  const__94.bindRoot(new clojure.pprint_single_defn());
  const__98.setMeta((IPersistentMap)const__101);
  const__98.bindRoot(new clojure.pprint_multi_defn());
  const__102.setMeta((IPersistentMap)const__105);
  const__102.bindRoot(new clojure.pprint_pprint_defn());
  const__106.setMeta((IPersistentMap)const__109);
  const__106.bindRoot(new clojure.pprint_pprint_binding_form());
  const__110.setMeta((IPersistentMap)const__113);
  const__110.bindRoot(new clojure.pprint_pprint_let());
  const__114.setMeta((IPersistentMap)const__116);
  const__114.bindRoot(((IFn)new clojure.pprint_fn__8422()).invoke());
  const__117.setMeta((IPersistentMap)const__120);
  const__117.bindRoot(new clojure.pprint_pprint_cond());
  const__121.setMeta((IPersistentMap)const__124);
  const__121.bindRoot(new clojure.pprint_pprint_condp());
  const__125.setDynamic(true);
  const__125.setMeta((IPersistentMap)const__128);
  const__125.bindRoot(clojure.lang.PersistentArrayMap.EMPTY);
  const__129.setMeta((IPersistentMap)const__132);
  const__129.bindRoot(new clojure.pprint_pprint_anon_func());
  const__75.setMeta((IPersistentMap)const__135);
  const__75.bindRoot(new clojure.pprint_pprint_simple_code_list());
  const__136.setMeta((IPersistentMap)const__139);
  const__136.bindRoot(new clojure.pprint_two_forms());
  const__140.setMeta((IPersistentMap)const__143);
  const__140.bindRoot(new clojure.pprint_add_core_ns());
  const__144.setDynamic(true);
  const__144.setMeta((IPersistentMap)const__146);
  const__144.bindRoot(((IFn)const__136.getRawRoot()).invoke(((IFn)const__140.getRawRoot()).invoke(RT.mapUniqueKeys(const__147, const__102.getRawRoot(), const__148, const__117.getRawRoot(), const__149, const__110.getRawRoot(), const__150, const__110.getRawRoot(), const__151, const__110.getRawRoot(), const__152, const__110.getRawRoot(), const__153, const__91.getRawRoot(), const__154, const__114.getRawRoot(), const__155, const__91.getRawRoot(), const__156, const__110.getRawRoot(), const__157, const__102.getRawRoot(), const__158, const__87.getRawRoot(), const__159, const__102.getRawRoot(), const__160, const__121.getRawRoot(), const__161, const__110.getRawRoot(), const__162, const__110.getRawRoot(), const__163, const__129.getRawRoot(), const__164, const__91.getRawRoot(), const__165, const__102.getRawRoot(), const__166, const__91.getRawRoot(), const__167, const__110.getRawRoot(), const__168, const__91.getRawRoot(), const__169, const__91.getRawRoot(), const__170, const__91.getRawRoot(), const__171, const__114.getRawRoot(), const__172, const__114.getRawRoot(), const__173, const__91.getRawRoot(), const__174, const__110.getRawRoot(), const__175, const__114.getRawRoot(), const__176, const__110.getRawRoot()))));
  const__177.setMeta((IPersistentMap)const__180);
  const__177.bindRoot(new clojure.pprint_pprint_code_list());
  const__181.setMeta((IPersistentMap)const__184);
  const__181.bindRoot(new clojure.pprint_pprint_code_symbol());
  ((IFn)new clojure.pprint_fn__8488()).invoke();
  ((IFn)const__2.getRawRoot()).invoke(const__185.getRawRoot(), const__67, const__177.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__185.getRawRoot(), const__186, const__181.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__185.getRawRoot(), const__68, const__33.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__185.getRawRoot(), const__69, const__40.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__185.getRawRoot(), const__70, const__44.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__185.getRawRoot(), const__71, const__59.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__185.getRawRoot(), const__72, const__55.getRawRoot());
  ((IFn)const__2.getRawRoot()).invoke(const__185.getRawRoot(), null, const__73.get());
  ((IFn)const__2.getRawRoot()).invoke(const__185.getRawRoot(), const__74, const__62.getRawRoot());
  ((IFn)const__187.getRawRoot()).invoke(const__66.getRawRoot());
 }
 private static clojure.lang.Var const__0;
 private static clojure.lang.Symbol const__1;
 private static clojure.lang.Var const__2;
 private static clojure.lang.Keyword const__3;
 private static clojure.lang.Keyword const__4;
 private static java.lang.Integer const__5;
 private static clojure.lang.Keyword const__6;
 private static java.lang.Integer const__7;
 private static clojure.lang.Keyword const__8;
 private static clojure.lang.IPersistentList const__9;
 private static clojure.lang.Keyword const__10;
 private static clojure.lang.Keyword const__11;
 private static clojure.lang.IPersistentMap const__12;
 private static clojure.lang.Var const__13;
 private static java.lang.Integer const__14;
 private static clojure.lang.IPersistentMap const__15;
 private static clojure.lang.Symbol const__16;
 private static clojure.lang.Symbol const__17;
 private static clojure.lang.Symbol const__18;
 private static clojure.lang.Symbol const__19;
 private static clojure.lang.IPersistentMap const__20;
 private static clojure.lang.Var const__21;
 private static java.lang.Integer const__22;
 private static clojure.lang.IPersistentList const__23;
 private static clojure.lang.IPersistentMap const__24;
 private static clojure.lang.Var const__25;
 private static java.lang.Integer const__26;
 private static clojure.lang.IPersistentList const__27;
 private static clojure.lang.IPersistentMap const__28;
 private static clojure.lang.Var const__29;
 private static java.lang.Integer const__30;
 private static clojure.lang.IPersistentList const__31;
 private static clojure.lang.IPersistentMap const__32;
 private static clojure.lang.Var const__33;
 private static java.lang.Integer const__34;
 private static clojure.lang.IPersistentList const__35;
 private static clojure.lang.IPersistentMap const__36;
 private static clojure.lang.Var const__37;
 private static java.lang.Integer const__38;
 private static clojure.lang.IPersistentMap const__39;
 private static clojure.lang.Var const__40;
 private static java.lang.Integer const__41;
 private static clojure.lang.IPersistentList const__42;
 private static clojure.lang.IPersistentMap const__43;
 private static clojure.lang.Var const__44;
 private static java.lang.Integer const__45;
 private static clojure.lang.IPersistentMap const__46;
 private static clojure.lang.Var const__47;
 private static java.lang.Integer const__48;
 private static clojure.lang.IPersistentMap const__49;
 private static clojure.lang.IPersistentMap const__50;
 private static clojure.lang.Var const__51;
 private static java.lang.Integer const__52;
 private static clojure.lang.IPersistentList const__53;
 private static clojure.lang.IPersistentMap const__54;
 private static clojure.lang.Var const__55;
 private static java.lang.Integer const__56;
 private static clojure.lang.IPersistentList const__57;
 private static clojure.lang.IPersistentMap const__58;
 private static clojure.lang.Var const__59;
 private static java.lang.Integer const__60;
 private static clojure.lang.IPersistentMap const__61;
 private static clojure.lang.Var const__62;
 private static java.lang.Integer const__63;
 private static clojure.lang.IPersistentList const__64;
 private static clojure.lang.IPersistentMap const__65;
 private static clojure.lang.Var const__66;
 private static java.lang.Class const__67;
 private static java.lang.Class const__68;
 private static java.lang.Class const__69;
 private static java.lang.Class const__70;
 private static java.lang.Class const__71;
 private static java.lang.Class const__72;
 private static clojure.lang.Var const__73;
 private static clojure.lang.Keyword const__74;
 private static clojure.lang.Var const__75;
 private static java.lang.Integer const__76;
 private static clojure.lang.Keyword const__77;
 private static clojure.lang.IPersistentMap const__78;
 private static clojure.lang.Var const__79;
 private static java.lang.Integer const__80;
 private static clojure.lang.IPersistentList const__81;
 private static clojure.lang.IPersistentMap const__82;
 private static clojure.lang.Var const__83;
 private static java.lang.Integer const__84;
 private static clojure.lang.IPersistentList const__85;
 private static clojure.lang.IPersistentMap const__86;
 private static clojure.lang.Var const__87;
 private static java.lang.Integer const__88;
 private static clojure.lang.IPersistentList const__89;
 private static clojure.lang.IPersistentMap const__90;
 private static clojure.lang.Var const__91;
 private static java.lang.Integer const__92;
 private static clojure.lang.IPersistentMap const__93;
 private static clojure.lang.Var const__94;
 private static java.lang.Integer const__95;
 private static clojure.lang.IPersistentList const__96;
 private static clojure.lang.IPersistentMap const__97;
 private static clojure.lang.Var const__98;
 private static java.lang.Integer const__99;
 private static clojure.lang.IPersistentList const__100;
 private static clojure.lang.IPersistentMap const__101;
 private static clojure.lang.Var const__102;
 private static java.lang.Integer const__103;
 private static clojure.lang.IPersistentList const__104;
 private static clojure.lang.IPersistentMap const__105;
 private static clojure.lang.Var const__106;
 private static java.lang.Integer const__107;
 private static clojure.lang.IPersistentList const__108;
 private static clojure.lang.IPersistentMap const__109;
 private static clojure.lang.Var const__110;
 private static java.lang.Integer const__111;
 private static clojure.lang.IPersistentList const__112;
 private static clojure.lang.IPersistentMap const__113;
 private static clojure.lang.Var const__114;
 private static java.lang.Integer const__115;
 private static clojure.lang.IPersistentMap const__116;
 private static clojure.lang.Var const__117;
 private static java.lang.Integer const__118;
 private static clojure.lang.IPersistentList const__119;
 private static clojure.lang.IPersistentMap const__120;
 private static clojure.lang.Var const__121;
 private static java.lang.Integer const__122;
 private static clojure.lang.IPersistentList const__123;
 private static clojure.lang.IPersistentMap const__124;
 private static clojure.lang.Var const__125;
 private static java.lang.Integer const__126;
 private static clojure.lang.Keyword const__127;
 private static clojure.lang.IPersistentMap const__128;
 private static clojure.lang.Var const__129;
 private static java.lang.Integer const__130;
 private static clojure.lang.IPersistentList const__131;
 private static clojure.lang.IPersistentMap const__132;
 private static java.lang.Integer const__133;
 private static clojure.lang.IPersistentList const__134;
 private static clojure.lang.IPersistentMap const__135;
 private static clojure.lang.Var const__136;
 private static java.lang.Integer const__137;
 private static clojure.lang.IPersistentList const__138;
 private static clojure.lang.IPersistentMap const__139;
 private static clojure.lang.Var const__140;
 private static java.lang.Integer const__141;
 private static clojure.lang.IPersistentList const__142;
 private static clojure.lang.IPersistentMap const__143;
 private static clojure.lang.Var const__144;
 private static java.lang.Integer const__145;
 private static clojure.lang.IPersistentMap const__146;
 private static clojure.lang.Symbol const__147;
 private static clojure.lang.Symbol const__148;
 private static clojure.lang.Symbol const__149;
 private static clojure.lang.Symbol const__150;
 private static clojure.lang.Symbol const__151;
 private static clojure.lang.Symbol const__152;
 private static clojure.lang.Symbol const__153;
 private static clojure.lang.Symbol const__154;
 private static clojure.lang.Symbol const__155;
 private static clojure.lang.Symbol const__156;
 private static clojure.lang.Symbol const__157;
 private static clojure.lang.Symbol const__158;
 private static clojure.lang.Symbol const__159;
 private static clojure.lang.Symbol const__160;
 private static clojure.lang.Symbol const__161;
 private static clojure.lang.Symbol const__162;
 private static clojure.lang.Symbol const__163;
 private static clojure.lang.Symbol const__164;
 private static clojure.lang.Symbol const__165;
 private static clojure.lang.Symbol const__166;
 private static clojure.lang.Symbol const__167;
 private static clojure.lang.Symbol const__168;
 private static clojure.lang.Symbol const__169;
 private static clojure.lang.Symbol const__170;
 private static clojure.lang.Symbol const__171;
 private static clojure.lang.Symbol const__172;
 private static clojure.lang.Symbol const__173;
 private static clojure.lang.Symbol const__174;
 private static clojure.lang.Symbol const__175;
 private static clojure.lang.Symbol const__176;
 private static clojure.lang.Var const__177;
 private static java.lang.Integer const__178;
 private static clojure.lang.IPersistentList const__179;
 private static clojure.lang.IPersistentMap const__180;
 private static clojure.lang.Var const__181;
 private static java.lang.Integer const__182;
 private static clojure.lang.IPersistentList const__183;
 private static clojure.lang.IPersistentMap const__184;
 private static clojure.lang.Var const__185;
 private static java.lang.Class const__186;
 private static clojure.lang.Var const__187;
 static void __init0() {
  const__0 = (clojure.lang.Var)RT.var("clojure.core", "in-ns");
  const__1 = (clojure.lang.Symbol)Symbol.intern(null, "clojure.pprint");
  const__2 = (clojure.lang.Var)RT.var("clojure.pprint", "use-method");
  const__3 = (clojure.lang.Keyword)Keyword.intern(null, "file");
  const__4 = (clojure.lang.Keyword)Keyword.intern(null, "column");
  const__5 = (java.lang.Integer)1;
  const__6 = (clojure.lang.Keyword)Keyword.intern(null, "line");
  const__7 = (java.lang.Integer)20;
  const__8 = (clojure.lang.Keyword)Keyword.intern(null, "arglists");
  const__9 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "multifn"), Symbol.intern(null, "dispatch-val"), Symbol.intern(null, "func"))));
  const__10 = (clojure.lang.Keyword)Keyword.intern(null, "doc");
  const__11 = (clojure.lang.Keyword)Keyword.intern(null, "private");
  const__12 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "multifn"), Symbol.intern(null, "dispatch-val"), Symbol.intern(null, "func")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "doc"), "Installs a function as a new method of multimethod associated with dispatch-value. ", Keyword.intern(null, "line"), 20, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__13 = (clojure.lang.Var)RT.var("clojure.pprint", "reader-macros");
  const__14 = (java.lang.Integer)45;
  const__15 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 45, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__16 = (clojure.lang.Symbol)Symbol.intern(null, "quote");
  const__17 = (clojure.lang.Symbol)Symbol.intern("clojure.core", "deref");
  const__18 = (clojure.lang.Symbol)Symbol.intern(null, "var");
  const__19 = (clojure.lang.Symbol)Symbol.intern("clojure.core", "unquote");
  const__20 = (clojure.lang.IPersistentMap)RT.map(Symbol.intern("clojure.core", "unquote"), "~", Symbol.intern(null, "quote"), "'", Symbol.intern(null, "var"), "#'", Symbol.intern("clojure.core", "deref"), "@");
  const__21 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-reader-macro");
  const__22 = (java.lang.Integer)49;
  const__23 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"))));
  const__24 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 49, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__25 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-simple-list");
  const__26 = (java.lang.Integer)66;
  const__27 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"))));
  const__28 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 66, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__29 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-list");
  const__30 = (java.lang.Integer)76;
  const__31 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"))));
  const__32 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 76, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__33 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-vector");
  const__34 = (java.lang.Integer)81;
  const__35 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "avec"))));
  const__36 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "avec")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 81, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__37 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-array");
  const__38 = (java.lang.Integer)91;
  const__39 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 91, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__40 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-map");
  const__41 = (java.lang.Integer)94;
  const__42 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "amap"))));
  const__43 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "amap")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 94, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__44 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-set");
  const__45 = (java.lang.Integer)109;
  const__46 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 109, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__47 = (clojure.lang.Var)RT.var("clojure.pprint", "type-map");
  const__48 = (java.lang.Integer)111;
  const__49 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 111, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__50 = (clojure.lang.IPersistentMap)RT.map("core$future_call", "Future", "core$promise", "Promise");
  const__51 = (clojure.lang.Var)RT.var("clojure.pprint", "map-ref-type");
  const__52 = (java.lang.Integer)115;
  const__53 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "name"))));
  const__54 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "name")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "doc"), "Map ugly type names to something simpler", Keyword.intern(null, "line"), 115, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__55 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-ideref");
  const__56 = (java.lang.Integer)122;
  const__57 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "o"))));
  const__58 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "o")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 122, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__59 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-pqueue");
  const__60 = (java.lang.Integer)138;
  const__61 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 138, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__62 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-simple-default");
  const__63 = (java.lang.Integer)140;
  const__64 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "obj"))));
  const__65 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "obj")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 140, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__66 = (clojure.lang.Var)RT.var("clojure.pprint", "simple-dispatch");
  const__67 = (java.lang.Class)clojure.lang.ISeq.class;
  const__68 = (java.lang.Class)clojure.lang.IPersistentVector.class;
  const__69 = (java.lang.Class)clojure.lang.IPersistentMap.class;
  const__70 = (java.lang.Class)clojure.lang.IPersistentSet.class;
  const__71 = (java.lang.Class)clojure.lang.PersistentQueue.class;
  const__72 = (java.lang.Class)clojure.lang.IDeref.class;
  const__73 = (clojure.lang.Var)RT.var("clojure.core", "pr");
  const__74 = (clojure.lang.Keyword)Keyword.intern(null, "default");
  const__75 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-simple-code-list");
  const__76 = (java.lang.Integer)166;
  const__77 = (clojure.lang.Keyword)Keyword.intern(null, "declared");
  const__78 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "column"), 1, Keyword.intern(null, "declared"), Boolean.TRUE, Keyword.intern(null, "line"), 166, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__79 = (clojure.lang.Var)RT.var("clojure.pprint", "brackets");
  const__80 = (java.lang.Integer)174;
  const__81 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "form"))));
  const__82 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "form")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "doc"), "Figure out which kind of brackets to use", Keyword.intern(null, "line"), 174, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__83 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-ns-reference");
  const__84 = (java.lang.Integer)181;
  const__85 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "reference"))));
  const__86 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "reference")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "doc"), "Pretty print a single reference (import, use, etc.) from a namespace decl", Keyword.intern(null, "line"), 181, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__87 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-ns");
  const__88 = (java.lang.Integer)215;
  const__89 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"))));
  const__90 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "doc"), "The pretty print dispatch chunk for the ns macro", Keyword.intern(null, "line"), 215, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__91 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-hold-first");
  const__92 = (java.lang.Integer)246;
  const__93 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 246, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__94 = (clojure.lang.Var)RT.var("clojure.pprint", "single-defn");
  const__95 = (java.lang.Integer)253;
  const__96 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"), Symbol.intern(null, "has-doc-str?"))));
  const__97 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"), Symbol.intern(null, "has-doc-str?")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 253, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__98 = (clojure.lang.Var)RT.var("clojure.pprint", "multi-defn");
  const__99 = (java.lang.Integer)262;
 }
 static void __init1() {
  const__100 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"), Symbol.intern(null, "has-doc-str?"))));
  const__101 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"), Symbol.intern(null, "has-doc-str?")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 262, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__102 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-defn");
  const__103 = (java.lang.Integer)268;
  const__104 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"))));
  const__105 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 268, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__106 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-binding-form");
  const__107 = (java.lang.Integer)293;
  const__108 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "binding-vec"))));
  const__109 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "binding-vec")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 293, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__110 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-let");
  const__111 = (java.lang.Integer)308;
  const__112 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"))));
  const__113 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 308, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__114 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-if");
  const__115 = (java.lang.Integer)323;
  const__116 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 323, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__117 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-cond");
  const__118 = (java.lang.Integer)325;
  const__119 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"))));
  const__120 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 325, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__121 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-condp");
  const__122 = (java.lang.Integer)345;
  const__123 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"))));
  const__124 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 345, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__125 = (clojure.lang.Var)RT.var("clojure.pprint", "*symbol-map*");
  const__126 = (java.lang.Integer)365;
  const__127 = (clojure.lang.Keyword)Keyword.intern(null, "dynamic");
  const__128 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "dynamic"), Boolean.TRUE, Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 365, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__129 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-anon-func");
  const__130 = (java.lang.Integer)367;
  const__131 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"))));
  const__132 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 367, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__133 = (java.lang.Integer)389;
  const__134 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"))));
  const__135 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 389, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__136 = (clojure.lang.Var)RT.var("clojure.pprint", "two-forms");
  const__137 = (java.lang.Integer)402;
  const__138 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "amap"))));
  const__139 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "amap")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 402, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__140 = (clojure.lang.Var)RT.var("clojure.pprint", "add-core-ns");
  const__141 = (java.lang.Integer)409;
  const__142 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "amap"))));
  const__143 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "amap")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 409, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__144 = (clojure.lang.Var)RT.var("clojure.pprint", "*code-table*");
  const__145 = (java.lang.Integer)418;
  const__146 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "dynamic"), Boolean.TRUE, Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 418, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__147 = (clojure.lang.Symbol)Symbol.intern(null, "fn");
  const__148 = (clojure.lang.Symbol)Symbol.intern(null, "cond");
  const__149 = (clojure.lang.Symbol)Symbol.intern(null, "let");
  const__150 = (clojure.lang.Symbol)Symbol.intern(null, "dotimes");
  const__151 = (clojure.lang.Symbol)Symbol.intern(null, "with-open");
  const__152 = (clojure.lang.Symbol)Symbol.intern(null, "loop");
  const__153 = (clojure.lang.Symbol)Symbol.intern(null, "..");
  const__154 = (clojure.lang.Symbol)Symbol.intern(null, "when-not");
  const__155 = (clojure.lang.Symbol)Symbol.intern(null, ".");
  const__156 = (clojure.lang.Symbol)Symbol.intern(null, "when-first");
  const__157 = (clojure.lang.Symbol)Symbol.intern(null, "defn-");
  const__158 = (clojure.lang.Symbol)Symbol.intern(null, "ns");
  const__159 = (clojure.lang.Symbol)Symbol.intern(null, "defn");
  const__160 = (clojure.lang.Symbol)Symbol.intern(null, "condp");
  const__161 = (clojure.lang.Symbol)Symbol.intern(null, "when-let");
  const__162 = (clojure.lang.Symbol)Symbol.intern(null, "with-local-vars");
  const__163 = (clojure.lang.Symbol)Symbol.intern(null, "fn*");
  const__164 = (clojure.lang.Symbol)Symbol.intern(null, "->");
  const__165 = (clojure.lang.Symbol)Symbol.intern(null, "defmacro");
  const__166 = (clojure.lang.Symbol)Symbol.intern(null, "struct-map");
  const__167 = (clojure.lang.Symbol)Symbol.intern(null, "if-let");
  const__168 = (clojure.lang.Symbol)Symbol.intern(null, "locking");
  const__169 = (clojure.lang.Symbol)Symbol.intern(null, "struct");
  const__170 = (clojure.lang.Symbol)Symbol.intern(null, "defonce");
  const__171 = (clojure.lang.Symbol)Symbol.intern(null, "when");
  const__172 = (clojure.lang.Symbol)Symbol.intern(null, "if");
  const__173 = (clojure.lang.Symbol)Symbol.intern(null, "def");
  const__174 = (clojure.lang.Symbol)Symbol.intern(null, "binding");
  const__175 = (clojure.lang.Symbol)Symbol.intern(null, "if-not");
  const__176 = (clojure.lang.Symbol)Symbol.intern(null, "doseq");
  const__177 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-code-list");
  const__178 = (java.lang.Integer)435;
  const__179 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis"))));
  const__180 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "alis")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 435, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__181 = (clojure.lang.Var)RT.var("clojure.pprint", "pprint-code-symbol");
  const__182 = (java.lang.Integer)441;
  const__183 = (clojure.lang.IPersistentList)PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "sym"))));
  const__184 = (clojure.lang.IPersistentMap)RT.map(Keyword.intern(null, "arglists"), PersistentList.create(java.util.Arrays.asList(RT.vector(Symbol.intern(null, "sym")))), Keyword.intern(null, "column"), 1, Keyword.intern(null, "private"), Boolean.TRUE, Keyword.intern(null, "line"), 441, Keyword.intern(null, "file"), "clojure/pprint/dispatch.clj");
  const__185 = (clojure.lang.Var)RT.var("clojure.pprint", "code-dispatch");
  const__186 = (java.lang.Class)clojure.lang.Symbol.class;
  const__187 = (clojure.lang.Var)RT.var("clojure.pprint", "set-pprint-dispatch");
 }
 static {
  __init0();
  __init1();
  clojure.lang.Compiler.pushNSandLoader(clojure.pprint.dispatch__init.class.getClassLoader());
  try {
   load();
  } catch (Exception ___x) {
  throw new RuntimeException(___x);
  } finally {
   Var.popThreadBindings();
  }
 }
}
